@using ModelsLeit.DTOs.Card
@using SharedLeit
@model CardCheckDto

@{
    ViewData["Title"] = $"Check {Model.Collection.Name}";
}

@*<div id="cardCounter" class="btn-primary">0</div>*@
<form id="checkCards" method="post">
<div id="cardInfo">
    <h2>@ViewData["Title"]</h2>
    <button type="button" class="btn btn-outline-secondary float-start btn-a ms-5 btn-next">
        <i class="bi bi-fast-forward-circle"></i>
        Next
    </button>
    <a asp-action="Index" asp-route-id="@Model.Collection.Id" class="float-end btn btn-primary">
        <i class="bi bi-arrow-left-square"></i>
        Return
    </a>
    <br /><br />
</div>
    <div id="cardSpinner" class="top-0 start-0 end-0 bottom-0 position-absolute align-items-center justify-content-center">
        <div class="spinner-grow" role="status">
            <span class="visually-hidden">Please Wait!</span>
        </div>
    </div>
    <div class="container">
        <div class="row">
            <div class="col-sm-1 col-md-2 col-xl-3"></div>
            <div class="col-sm-10 col-md-8 col-xl-6">                
                <div class="card align-middle">

                    <div class="card-body">
                        <h2 id="ask" class="card-title" @Html.Raw(
                        Model.HasMp3 ?
                            //play mp3 on click (speaker icon) ELSE any
                        $"audio='/audio/{Model.Id}.mp3' onclick='new Audio(this.getAttribute(\"audio\")).play()'><i class='bi bi-volume-off-fill'></i" : string.Empty
                        )>@Model.Ask</h2>
                        <br />
                        <h2 id="answer" class="card-title">@Model.Answer</h2>
                        <div id="description">@(Html.Raw(Model.Description))</div>
                        <br /><br />
                        <button type="button" item="@Model.Id" class="btn btn-outline-warning float-start me-5 @(Model.Status is CardStatus.Rejected ? "disabled" : string.Empty)"
                            data-status="@(((int) CardStatus.Rejected))">
                            <i class="bi bi-x-circle"></i>
                            Reject
                        </button>
                        <button type="button" item="@Model.Id" class="btn btn-outline-danger float-start btn-a me-5 @(Model.Status is CardStatus.Blocked ? "disabled" : string.Empty)"
                            data-status="@((int) CardStatus.Blocked)">
                            <i class="bi bi-ban"></i>
                            Block
                        </button>
                        <button type="button" item="@Model.Id" class="btn btn-outline-success float-end btn-a @(Model.Status is CardStatus.Approved ? "disabled" : string.Empty)"
                            data-status="@((int) CardStatus.Approved)">
                            <i class="bi bi-check-circle"></i>
                            Approve
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <input asp-for="@Model.Skip" type="hidden"/>
    <input asp-for="@Model.Status" type="hidden"/>
    <input asp-for="@Model.Id" type="hidden"/>
    <input name="defaultStatus" value="@Model.Status" type="hidden"/>
    <input name="collectionId" value="@Model.Collection.Id" type="hidden"/>
</form>

@section Scripts {
<script>
    $(document).ready(function () {
        var skip = @Model.Skip;
        var changeCard = function (obj)
        {
            console.info('|changeCard|');
            if (obj.hasMp3)
            {
                $("#ask").attr("audio", "/audio/" + obj.id + ".mp3");
                $("#ask").attr("onclick", "new Audio(this.getAttribute(\"audio\")).play()");
                $("#ask").html("<i class='bi bi-volume-off-fill'></i>"+obj.ask);
            }
            else
            {
                $("#ask").attr("audio", "");
                $("#ask").attr("onclick", "");
                $("#ask").html(obj.ask);
            }
            
            $("#Id").val(obj.id);
            $("#Skip").html(obj.skip);
            $("#answer").html(obj.answer);
            $("#description").html(obj.description);
            console.info('|finCard|');
        }

        var getCard = function (e,status){
            var action = "CheckUp";
            if (status == 0) {
                action = "CheckNext";
            }
            var form = $(e).closest('form');
            return new Promise(function (resolve, reject) {
                $.ajax({
                    url: "/AdminCard/" + action + "/",
                    @* (@Model.CollectionId)?status=" + status + "&skip=" + skip, *@
                    type: 'POST',
                    dataType: 'json',
                    data: $(form).serialize(),
                    success: function (data) {
                        if(Array.from(data)[0] =="/"){
                            console.info('|ReciveUrl|');
                            window.location.href = data;
                            return;
                        }
                        if (data.Id !== 0) {
                            console.info('|ReciveObj|');
                            changeCard(data);
                            resolve(true);
                        }
                        else{
                            console.info("erroR: " + data.description);
                        }
                        console.info('|finAjax|');
                    },
                    error: function (xhr, status, error) {
                        console.error(status + ': ' + error);
                    }
                });
                console.info('|sendAjax|');
            });
        };


        var buttonEvent = async function (e, status) {
                var card = $('.card');
                $("#Status").val(status);
                            console.info(1);
                card.fadeOut("fast", async function () {
                    try {
                            console.info(2);
                        console.info("=");
                        $('#cardSpinner').fadeIn("fast").css('display', 'flex');
                        var req = await getCard(e, status);
                                    //$('#cardSpinner').fadeOut("fast", function () {$('#cardSpinner'); });
                        console.info("!");
                        console.info(req);
                        if (req === false){
                            console.info("done");
                        } else {
                            console.info(1);
                            $('#cardSpinner').fadeOut("fast");
                            console.info('else!');
                            
                        console.info("stay");
                        card.delay(100).fadeIn("fast");
                        }
                    }
                    catch (error)
                    {
                            console.info(00000);
                        console.error("Error: ", error);
                    }
             });
        };

        var buttonNext = async function (e) {
            //just send before this card!! ON prev
            var form = $('form').first();
            formSubmit(form);
        }
            
        var readyPage = function () {
            $('[data-status],.btn-next').unbind();
                
            $('[data-status]').click(function () {
                var status = $(this).data('status');
                        console.info("status : "+ status);
                buttonEvent(this, status);
            });

            $('.btn-next').click(function () {
            var form = $(this).closest('form');
            console.info(form);
                buttonEvent(this, 0);
            });
        }

        readyPage();
    });
</script>
}