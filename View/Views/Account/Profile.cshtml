@using ModelsLeit.ViewModels.User
@model UserModifyProfileLimitedViewModel

@{
    ViewData["Title"] = "Modify Profile";
}

<h1>@ViewData["Title"]</h1>
<p>
    @foreach(var item in TempData)
    {
        @(item.Value is null or 0 ? string.Empty : Html.Raw($"{item.Value}<br />"))
    }
</p>
<form asp-action="Profile">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input asp-for="Id" class="form-control" type="hidden" />

    <h3>Personal:</h3>
    <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Bio" class="control-label"></label>
        <textarea asp-for="Bio" class="form-control"></textarea>
        <span asp-validation-for="Bio" class="text-danger"></span>
    </div>
    <br />
    <br />
    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-primary" />
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}